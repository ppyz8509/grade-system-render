
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
  ADVISOR
  COURSE_INSTRUCTOR
}



model User {
  id       Int      @id @default(autoincrement())
  name     String
  username String   @unique
  password String   
  role     Role 
  studentInfo    StudentInfo?


}
 model StudentInfo {
    id        Int      @id @default(autoincrement())
    student   User   @relation(fields: [studentsId], references: [id])
    studentsId Int   @unique
    studentIdcard   Int 
    year      Int
    room      Int
    studentPlan  StudentPlan[]
 }

 model StudentPlan {
      id        Int      @id @default(autoincrement())
      studentPlanName String
      studentPlanYear String

      student   StudentInfo?   @relation(fields: [studentsId], references: [id])
      studentsId Int?   @unique


      category   Category?   @relation(fields: [categoryId], references: [id])
      categoryId Int?
      categoryName  String?

      group   Group?   @relation(fields: [groupId], references: [id])
      groupId Int?
      groupName  String?

      course   Course?   @relation(fields: [courseId], references: [id])
      courseId Int?
      courseName  String?




 }



/// หลักสูตร
 model Major {
      id        Int      @id @default(autoincrement())
      majorNameTH String
      majorNameENG  String
      majorYear String
      majorUnit String
      majorStatus String
      majorCode String
      majorSupervisor String

      category  Category[]
      
      course  Course[]
 }

 
//หมวดวิชา
 model Category {
        id        Int      @id @default(autoincrement())
        categoryName  String
        categoryUnit  String

        major   Major   @relation(fields: [majorId], references: [id])
        majorId Int 

        group Group[]

        studentPlan  StudentPlan[]
 
 }   
///กลุ่มวิชา
 model  Group {
        id        Int      @id @default(autoincrement())
        groupName String
        groupUnit String

        category   Category   @relation(fields: [categoryId], references: [id])
        categoryId Int 

        studentPlan  StudentPlan[]
        course  Course[]

  
 }
//รายวิชา
 model Course {
        id        Int      @id @default(autoincrement())
        courseCode String
        courseNameTH  String
        courseNameENG String
        courseYear  String
        courseUnit  Int

        major   Major   @relation(fields: [majorId], references: [id])
        majorId Int 

        group   Group   @relation(fields: [groupId], references: [id])
        groupId Int 

        studentPlan  StudentPlan[]

 }
