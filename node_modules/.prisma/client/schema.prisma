// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
  ADVISOR
  COURSE_INSTRUCTOR
}

model User {
  id       Int          @id @default(autoincrement())
  name     String
  username String       @unique
  password String
  role     Role
  student  Studentinfo?
}

model Studentinfo {
  id        Int     @id @default(autoincrement())
  student   User    @relation(fields: [studentId], references: [id])
  studentId Int     @unique
  class     Class[]
}

model Class {
  id       Int           @id @default(autoincrement())
  year     Int
  students Studentinfo[]
}

// model Admin {
//   id       Int      @id @default(autoincrement())
//   name     String
//   username String   @unique
//   password String   
//   role      Role    
// }

// model Advisor {
//   id       Int      @id @default(autoincrement())
//   name     String
//   username String   @unique
//   password String   
//   role     Role     
// }

model CourseInstructor {
  id       Int      @id @default(autoincrement())
  name     String
  username String   @unique
  password String
  role     Role
  courses  Course[] // ความสัมพันธ์กับหลักสูตรที่เป็นผู้รับผิดชอบ
}

model Course {
  id                      Int               @id @default(autoincrement())
  nameThai                String ////ชื่อหลักสูตร(ไทย)
  nameEnglish             String ////ชื่อหลักสูตร(อังกฤษ)
  creditUnits             Int ///หน่วยกิต 128+
  responsibleInstructor   CourseInstructor? @relation(fields: [responsibleInstructorId], references: [id]) //บ่งบอกความสัมพันของคอสหน่วยกิต
  responsibleInstructorId Int?
  category                String
  creditUnitsCategory     Int
  groupCourseThai         String
  groupCourseEnglish      String
  semester                String
  mandatorySubjects       String[]
}
